@import './design-tokens.scss';

$label-variants: (
    primary: (
        backgroundColor: $primary-color,
        text: $primary-color,
        hoverOpacity: 60%,
    ),
    secondary: (
        backgroundColor: $secondary-color,
        text: $secondary-color,
        hoverOpacity: 20%,
    ),
    tertiary: (
        backgroundColor: $tertiary-color,
        text: $tertiary-color,
        hoverOpacity: 20%,
    ),
    info: (
        backgroundColor: $info-color,
        text: $info-color,
        hoverOpacity: 20%,
    ),
    success: (
        backgroundColor: $success-color,
        text: $success-color,
        hoverOpacity: 30%,
    ),
    warning: (
        backgroundColor: $warning-color,
        text: $warning-color,
        hoverOpacity: 20%,
    ),
    danger: (
        backgroundColor: $danger-color,
        text: $danger-color,
        hoverOpacity: 40%,
    ),
    neutral: (
        backgroundColor: $neutral-color,
        text: $neutral-color,
        hoverOpacity: 20%,
    ),
);

.koum-label {
    font-family: 'Nunito';
    border-radius: 20px;
    display: flex;
    align-items: center;
    gap: 4px;
    span {
        display: flex;
        align-items: center;
        gap: 4px;
    }
    button {
        background-color: transparent;
        height: max-content;
        border: none;
        transition: 0.3s scale;
        color: inherit;
        padding: 2px;
        display: flex;
        align-items: center;
        border-radius: 2px;
        cursor: pointer;
        transition: 0.3s background-color;
        &:active {
            scale: 90%;
        }
    }
    .icon {
        height: max-content;
        display: flex;
    }

    &.square {
        border-radius: 4px;
    }

    @each $variant, $props in $label-variants {
        &.#{$variant}:not(:disabled) {
            background-color: rgba(map-get($props, backgroundColor), 0.2);

            color: darken(map-get($props, text), 0.2);

            &::before {
                background-color: lighten(
                    $color: map-get($props, backgroundColor),
                    $amount: map-get($props, hoverOpacity)
                );
            }
            .icon {
                fill: map-get($props, text);
            }
            button {
                &:hover {
                    background-color: rgba(
                        map-get($props, backgroundColor),
                        0.2
                    );
                }
            }
        }
    }

    // SIZES
    &.small {
        padding: 2px 10px;
        font-size: 12px;
        &.delete {
            padding-right: 8px;
        }
    }
    &.medium {
        padding: 4px 12px;
        font-size: 14px;
        &.delete {
            padding-right: 10px;
        }
    }
    &.large {
        padding: 4px 16px;
        font-size: 16px;
        &.delete {
            padding-right: 12px;
        }
    }
}
